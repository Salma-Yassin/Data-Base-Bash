#! /usr/bin/bash

source regex
echo $PWD
PS3="Choose an Option >> "
select  variable2 in "Create Table" "Drop Table" "Insert into Table" "select from Table" "Delete from Table" "Update Table" "List Tables" "Back to main menu" 
do
    case $REPLY in
        1) # "Create Table"
            fields=()
            read -p "Enter Table Name: " table_name
            if [[ "$(regex_table "$table_name")" == "1" ]]; then 
                if [ -f $table_name ];then
                    echo "The table already exists"
                else 
                    read -p "Enter number of fields: " no_fields 
                    touch $table_name .meta_$table_name
                    if [[ $no_fields =~ ^[0-9]+$ ]];then
                        for ((i = 1; i <= no_fields; i++)); do
                            PS3="Field Type: "
                            read -p "Enter field $i: " field_name
                            for field in ${fields[@]}; do
                                while [[ $field == $field_name ]]; do
                                    read -p "Column with this name already exists. Please enter a unique name: " field_name
                                done
                            done
                            fields+=($field_name)
                            echo "${fields[@]}"
                            select field_type in "String" "Integer"
                            do
                                case $REPLY in
                                1) 
                                    echo "$field_name:$field_type" >> .meta_$table_name
                                    break ;;
                                2)
                                    echo "$field_name:$field_type" >> .meta_$table_name
                                    break ;;
                                esac
                            done 
                        done
                        PS3="Choose an Option >> "
                        source table_menue
                    else
                        echo "Not a valid number of fields "
                        source table_menue
                    fi
                fi
            else
                echo "Not a Valid Table Name"
                source table_menue
            fi 

        ;;
        2) # "Drop Table"
            read -p "Enter Table Name: " table_name
            if [[ "$(regex_table "$table_name")" == "1" ]]; then 
                    if [ -f $table_name ];then
                        rm -i $table_name .meta_$table_name
                        echo "Table deleted"
                        source table_menue
                    else 
                        echo "The table does not exist"
                        source table_menue
                    fi 
            else
                echo "Not a valid Name"
                source table_menue
            fi
        ;; 
        3) # "Insert into Table" 
        echo $variable2
        echo "Please choose which table to insert into."
        select option in $(ls -F | grep -v /)
        do 
            if [ -n "$option" ]; then
                source insert_table $option .meta_$option
            else
                echo "Invalid selection."
                source table_menue
                break
            fi
        done
        source table_menue
        ;;
        4) #Select from table
        echo $variable2
        echo $PWD
        echo "Please choose which table to select from."
        select option in $(ls -F | grep -v /)
        do 
            if [ -n "$option" ]; then
                source select_table $option .meta_$option
            else
                echo "Invalid selection."
                source table_menue
                break
            fi
        done
        ;;
        5) # Delete from a table 
            echo $variable2
            echo "Please choose which table to delete from."
            select option in $(ls -F | grep -v /)
            do 
                if [ -n "$option" ]; then
                    source delete_from_table $option .meta_$option
                else
                    echo "Invalid selection."
                    source table_menue
                    break
                fi
                PS3="Choose an Option >> "
            done
        ;;
        6) # update table 
            echo $variable2
            echo "Please choose which table to update."
            select option in $(ls -F | grep -v /)
            do 
                if [ -n "$option" ]; then
                    source update_table $option .meta_$option
                else
                    echo "Invalid selection."
                    source table_menue
                    break
                fi
            done
        ;;
        7) # "List Tables" 
            echo "Existing Tables are: "
            ls -F | grep -v /
            source table_menue
        ;;
        8) #Back to main menu
        cd .. 
        echo $PWD
        source main_menu 
        ;;
        *)
        echo "Invalid option, you are back to main menu."
        cd ..
        source main_menu
        break
    esac
done 